import { {{tag}}{{#if expectThrow}}, ApiError{{/if}} } from '../../src/index.js';
{{#if importFs}}import fsp from 'fs/promises';{{/if}}

async function example() {
  const response = await {{tag}}.{{operationId}}({{#if hasParams}}{ {{{params}}} }{{/if}});
  return response;
}

describe('Testing {{tag}}.{{operationId}}', () => {
  it('should be truthy or throw', async () => {
    {{#if expectTimeout}}
    const examplePromise = example();
    const timeoutPromise = new Promise((r) => setTimeout(() => r('timeout'), 450));
    expect(await Promise.any([examplePromise, timeoutPromise])).toBe('timeout');
    {{else}}
      {{#if expectThrow}}
      try { await example(); } catch (err) { expect(err).toBeInstanceOf(ApiError); }
      {{else}}
      expect(await example()).toBeTruthy();
      {{/if}}
    {{/if}}
  });
});

