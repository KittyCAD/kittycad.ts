[
  {
    "op": "add",
    "path": "/paths/~1users~1{id}~1api-calls/get/x-typescript",
    "value": {
      "example": "import { api_calls } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await api_calls.list_api_calls_for_user({\n    id: \"string\",\n    limit: 7,\n    page_token: \"string\",\n    sort_by: \"created-at-ascending\",\n  });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1users~1{id}/get/x-typescript",
    "value": {
      "example": "import { users } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await users.get_user({ id: \"string\" });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1users-extended~1{id}/get/x-typescript",
    "value": {
      "example": "import { users } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await users.get_user_extended({ id: \"string\" });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1users-extended/get/x-typescript",
    "value": {
      "example": "import { users } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await users.list_users_extended({\n    limit: 7,\n    page_token: \"string\",\n    sort_by: \"created-at-ascending\",\n  });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1users/get/x-typescript",
    "value": {
      "example": "import { users } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await users.list_users({\n    limit: 7,\n    page_token: \"string\",\n    sort_by: \"created-at-ascending\",\n  });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1session~1{token}/get/x-typescript",
    "value": {
      "example": "import { sessions } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await sessions.get_session_for_user({ token: \"string\" });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1payment~1methods~1{id}/delete/x-typescript",
    "value": {
      "example": "import { payments } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await payments.delete_payment_method_for_user({\n    id: \"string\",\n  });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1payment~1methods/get/x-typescript",
    "value": {
      "example": "import { payments } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await payments.list_payment_methods_for_user();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1payment~1invoices/get/x-typescript",
    "value": {
      "example": "import { payments } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await payments.list_invoices_for_user();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1payment~1intent/post/x-typescript",
    "value": {
      "example": "import { payments } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await payments.create_payment_intent_for_user();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1payment~1balance/get/x-typescript",
    "value": {
      "example": "import { payments } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await payments.get_payment_balance_for_user();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1payment/put/x-typescript",
    "value": {
      "example": "import { payments } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await payments.update_payment_information_for_user();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1payment/post/x-typescript",
    "value": {
      "example": "import { payments } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await payments.create_payment_information_for_user();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1payment/get/x-typescript",
    "value": {
      "example": "import { payments } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await payments.get_payment_information_for_user();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1payment/delete/x-typescript",
    "value": {
      "example": "import { payments } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await payments.delete_payment_information_for_user();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1file~1conversions~1{id}/get/x-typescript",
    "value": {
      "example": "import { file } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await file.get_file_conversion_for_user({ id: \"string\" });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1extended/get/x-typescript",
    "value": {
      "example": "import { users } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await users.get_user_self_extended();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1api-tokens~1{token}/get/x-typescript",
    "value": {
      "example": "import { api_tokens } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await api_tokens.get_api_token_for_user({ token: \"string\" });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1api-tokens~1{token}/delete/x-typescript",
    "value": {
      "example": "import { api_tokens } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await api_tokens.delete_api_token_for_user({\n    token: \"string\",\n  });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1api-tokens/post/x-typescript",
    "value": {
      "example": "import { api_tokens } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await api_tokens.create_api_token_for_user();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1api-tokens/get/x-typescript",
    "value": {
      "example": "import { api_tokens } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await api_tokens.list_api_tokens_for_user({\n    limit: 7,\n    page_token: \"string\",\n    sort_by: \"created-at-ascending\",\n  });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1api-calls~1{id}/get/x-typescript",
    "value": {
      "example": "import { api_calls } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await api_calls.get_api_call_for_user({ id: \"string\" });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user~1api-calls/get/x-typescript",
    "value": {
      "example": "import { api_calls } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await api_calls.user_list_api_calls({\n    limit: 7,\n    page_token: \"string\",\n    sort_by: \"created-at-ascending\",\n  });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user/put/x-typescript",
    "value": {
      "example": "import { users } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await users.update_user_self();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user/get/x-typescript",
    "value": {
      "example": "import { users } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await users.get_user_self();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1user/delete/x-typescript",
    "value": {
      "example": "import { users } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await users.delete_user_self();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1unit~1conversion~1{src_format}~1{output_format}/post/x-typescript",
    "value": {
      "example": "import { unit } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await unit.create_unit_conversion({\n    output_format: \"atto\",\n    src_format: \"atto\",\n    value: 7,\n  });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1ping/get/x-typescript",
    "value": {
      "example": "import { meta } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await meta.ping();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1oauth2~1provider~1{provider}~1consent/get/x-typescript",
    "value": {
      "example": "import { oauth2 } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await oauth2.listen_oauth2_provider_consent({\n    provider: \"google\",\n    callback_url: \"string\",\n  });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1oauth2~1provider~1{provider}~1callback/get/x-typescript",
    "value": {
      "example": "import { oauth2 } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await oauth2.listen_oauth2_provider_callback({\n    provider: \"google\",\n    code: \"string\",\n    state: \"string\",\n  });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1oauth2~1device~1verify/get/x-typescript",
    "value": {
      "example": "import { oauth2 } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await oauth2.device_auth_verify({ user_code: \"string\" });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1oauth2~1device~1token/post/x-typescript",
    "value": {
      "example": "import { oauth2 } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await oauth2.device_access_token();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1oauth2~1device~1confirm/post/x-typescript",
    "value": {
      "example": "import { oauth2 } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await oauth2.device_auth_confirm();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1oauth2~1device~1auth/post/x-typescript",
    "value": {
      "example": "import { oauth2 } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await oauth2.device_auth_request();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1file~1volume/post/x-typescript",
    "value": {
      "example": "import { file } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await file.create_file_volume({\n    src_format: \"stl\",\n    body: \"base64 encoded string\",\n  });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1file~1mass/post/x-typescript",
    "value": {
      "example": "import { file } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await file.create_file_mass({\n    material_density: 7,\n    src_format: \"stl\",\n    body: \"base64 encoded string\",\n  });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1file~1execute~1{lang}/post/x-typescript",
    "value": {
      "example": "import { file } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await file.create_file_execution({\n    lang: \"go\",\n    output: \"string\",\n    body: \"base64 encoded string\",\n  });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1file~1density/post/x-typescript",
    "value": {
      "example": "import { file } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await file.create_file_density({\n    material_mass: 7,\n    src_format: \"stl\",\n    body: \"base64 encoded string\",\n  });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1file~1conversions~1{id}/get/x-typescript",
    "value": {
      "example": "import { file } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await file.get_file_conversion({ id: \"string\" });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1file~1conversion~1{src_format}~1{output_format}/post/x-typescript",
    "value": {
      "example": "import { file } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await file.create_file_conversion({\n    output_format: \"stl\",\n    src_format: \"stl\",\n    body: \"base64 encoded string\",\n  });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1async~1operations~1{id}/get/x-typescript",
    "value": {
      "example": "import { api_calls } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await api_calls.get_async_operation({ id: \"string\" });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1async~1operations/get/x-typescript",
    "value": {
      "example": "import { api_calls } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await api_calls.list_async_operations({\n    limit: 7,\n    page_token: \"string\",\n    sort_by: \"created-at-ascending\",\n    status: \"Queued\",\n  });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1api-calls~1{id}/get/x-typescript",
    "value": {
      "example": "import { api_calls } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await api_calls.get_api_call({ id: \"string\" });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1api-calls/get/x-typescript",
    "value": {
      "example": "import { api_calls } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await api_calls.list_api_calls({\n    limit: 7,\n    page_token: \"string\",\n    sort_by: \"created-at-ascending\",\n  });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1api-call-metrics/get/x-typescript",
    "value": {
      "example": "import { api_calls } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await api_calls.get_api_call_metrics({ group_by: \"email\" });\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1_meta~1info/get/x-typescript",
    "value": {
      "example": "import { meta } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await meta.get_metadata();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/paths/~1/get/x-typescript",
    "value": {
      "example": "import { meta } from \"@kittycad/lib\";\n\nasync function example() {\n  const response = await meta.get_schema();\n  if (\"error_code\" in response) throw \"error\";\n  console.log(JSON.stringify(response, null, 2));\n}\n",
      "libDocsLink": ""
    }
  },
  {
    "op": "add",
    "path": "/info/x-typescript",
    "value": {
      "client": "",
      "install": "npm install @kittycad/lib\n# or \nyarn add @kittycad/lib"
    }
  }
]